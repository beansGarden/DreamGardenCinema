<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kh.dgc.mypage.model.dao.MypageMapper">

	<resultMap type="Qna" id="qna_rm">

		<id property="qnaNo" column="QNA_NO" />

		<result property="qnaTitle" column="QNA_TITLE" />
		<result property="qnaContent" column="QNA_CONTENT" />
		<result property="qnaEnrollDate" column="QNA_ENROLL_DATE" />
		<result property="qnaDeleteFl" column="QNA_DELETE_FL" />
		<result property="qnaCheckFl" column="QNA_CHECK_FL" />
		<result property="qnaCategory" column="QNA_CATEGORY" />
		<result property="userNo" column="USER_NO2" />
		<result property="userNickname" column="USER_NICKNAME" />

		<!--JOIN QNA_COMMENT-->
		<result property="qnaCommentNo" column="QNA_COMMENT_NO" />
		<result property="qnaCommentDate" column="QNA_COMMENT_DATE" />
		<result property="qnaCommentFl" column="QNA_COMMENT_FL" />
		<result property="qnaComment" column="QNA_COMMENT" />
		<!--JOIN USER_INFO-->
		<result property="userRating" column="USER_RATING" />

	</resultMap>

	<resultMap type="User" id="user_rm">
		<id property="userNo" column="USER_NO" />
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="userNickname" column="USER_NICKNAME" />
		<result property="userTel" column="USER_TEL" />
		<result property="userEmail" column="USER_EMAIL" />
		<result property="userBirth" column="USER_BIRTH" />
		<result property="userGender" column="USER_GENDER" />
		<result property="userEnrollDate" column="USER_ENROLL_DT" />
		<result property="userAmount" column="USER_AMOUNT" />
		<result property="userRole" column="USER_ROLE" />
		<result property="userRating" column="USER_RATING" />
		<result property="userClose" column="USER_CLOSE" />
		<result property="userAddress" column="USER_ADDRESS" />
	</resultMap>

	<resultMap type="Coupon" id="coupon_rm">
		<!--JOIN USER_COUPON-->
		<id property="userCouponNo" column="USER_COUPON_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="useFl" column="USE_FL" />
		<!--COUPON-->
		<result property="couponNo" column="COUPON_NO" />
		<result property="couponPrice" column="COUPON_PRICE" />
		<result property="couponName" column="COUPON_NAME" />
	</resultMap>

	<resultMap type="Ticket" id="ticket_rm">
		<id property="ticketNo" column="TICKET_NO" />
		<result property="ticketingTime" column="TICKETING_TIME" />
		<result property="payAmount" column="PAY_AMOUNT" />
		<result property="userNo" column="USER_NO" />
		<result property="coupon" column="COUPON" />
		<result property="movieTime" column="MOVIE_TIME" />
		<result property="movieTheater" column="MOVIE_THEATER" />
		<result property="movieNo" column="MOVIE_NO" />
		<result property="ticketFL" column="TICKET_FL" />
		<result property="ticketId" column="TICKET_ID" />
		<result property="ticketImpId" column="TICKEY_IMP_UID" />
		<result property="seatNo" column="SEAT_NO" />
		<result property="state" column="STATE" />
		<result property="movieTitle" column="MOVIE_TITLE" />
		<!--JOIN MOVIE-->
		<result property="poster" column="POSTER" />
	</resultMap>

	<resultMap type="QnaImage" id="qnaImg_rm">
		<id property="qnaImgNo" column="QNA_IMG_NO" />
		<result property="qnaImgOrder" column="QNA_IMG_ORDER" />
		<result property="qnaImgPath" column="QNA_IMG_PATH" />
		<result property="qnaNo" column="QNA_NO" />
		<result property="qnaImgOriginal" column="QNA_IMG_ORIGINAL" />
		<result property="qnaImgRename" column="QNA_IMG_RENAME" />
	</resultMap>

	<!--나의 1:1 문의 내역 조회-->
	<select id="myQnaList" resultMap="qna_rm">
		SELECT
		Q.QNA_NO,QNA_TITLE,QNA_CONTENT,QNA_CHECK_FL,QNA_CATEGORY,QNA_ENROLL_DATE,QNA_COMMENT,USER_RATING
		FROM QNA Q
		JOIN USER_INFO U ON (U.USER_NO = USER_NO2)
		LEFT JOIN "QNA _COMMENT" C ON (Q.QNA_NO = C.QNA_NO)
		WHERE USER_NO2 = #{userNo}
		ORDER BY Q.QNA_NO DESC
	</select>

	<!-- 나의 닉네임 변경-->
	<update id="changeNickName" parameterType="User">
		UPDATE "USER_INFO" SET
		USER_NICKNAME = #{userNickname}
		WHERE USER_NO = #{userNo}
	</update>

	<!--회원 정보 수정(이메일,주소)-->
	<update id="changeInfo" parameterType="User">
		UPDATE "USER_INFO" SET
		USER_EMAIL = #{userEmail},
		USER_ADDRESS = #{userAddress}
		WHERE USER_NO = #{userNo}
	</update>

	<!-- 회원 번호가 일치하는 회원 비밀번호 조회-->
	<select id="selectEncPw" parameterType="int" resultType="string">
		SELECT USER_PW FROM "USER_INFO" WHERE USER_NO = #{userNo}
	</select>

	<!-- 비밀번호 변경-->
	<update id="changePw" parameterType="User">
		UPDATE "USER_INFO" SET
		USER_PW = #{userPw}
		WHERE USER_NO = #{userNo}
	</update>

	<!-- 회원 보유 쿠폰 조회-->
	<select id="couponList" resultMap="coupon_rm">
		SELECT *
		FROM USER_COUPON
		JOIN COUPON USING(COUPON_NO)
		WHERE USER_NO = #{userNo}
		AND USE_FL ='N'
	</select>

	<!-- 회원 탈퇴-->
	<update id="secessionUser" parameterType="User">
		UPDATE "USER_INFO" SET
		USER_CLOSE = 'Y'
		WHERE USER_NO = #{userNo}
	</update>

	<!--회원이 예매한 티켓 리스트-->
	<select id="ticketList" resultMap="ticket_rm">
		SELECT
		TICKET_NO,
		MOVIE_NO,
		TO_CHAR(MOVIE_TIME, 'YYYY.MM.DD(""Dy"")HH24:MI:SS') AS MOVIE_TIME,
		PAY_AMOUNT,
		MOVIE_THEATER,
		TICKET_ID,
		MOVIE_TITLE,
		TICKEY_IMP_UID,
		POSTER,
		USER_NO,
		(
		SELECT LISTAGG(SEAT_NO, ',') WITHIN GROUP (ORDER BY SEAT_NO)
		FROM SEAT_CHECK sc
		WHERE sc.TICKET_NO = ti.TICKET_NO
		) AS SEAT_NO
		FROM
		TICKETING_INFO ti
		JOIN MOVIE USING (MOVIE_NO)
		WHERE
		USER_NO = #{userNo}
		AND TICKET_ID IS NOT NULL
		AND TICKET_FL = 'Y'
		ORDER BY TICKET_NO DESC
	</select>

	<!--나의 문의 내역 이미지 리스트-->
	<select id="myqnaImageList" resultMap="qnaImg_rm">
		SELECT QNA_IMG_NO ,QNA_IMG_ORDER ,QNA_IMG_PATH ,QNA_NO ,QNA_IMG_ORIGINAL
		,QNA_IMG_RENAME, USER_NO
		FROM QNA_IMG qi
		JOIN QNA USING(QNA_NO)
		JOIN USER_INFO ON (USER_NO2 = USER_NO)
		WHERE QNA_NO = #{qnano}
	</select>

	<!--취소 내역 조회-->
	<select id="cancleReservation" resultMap="ticket_rm">
		SELECT
		TICKET_NO,
		MOVIE_NO,
		TO_CHAR(MOVIE_TIME, 'YYYY.MM.DD(""Dy"")HH24:MI:SS') AS MOVIE_TIME,
		PAY_AMOUNT,
		MOVIE_THEATER,
		TICKET_ID,
		MOVIE_TITLE,
		POSTER,
		TICKEY_IMP_UID,
		USER_NO,
		(
		SELECT LISTAGG(SEAT_NO, ',') WITHIN GROUP (ORDER BY SEAT_NO)
		FROM SEAT_CHECK sc
		WHERE sc.TICKET_NO = ti.TICKET_NO
		) AS SEAT_NO
		FROM
		TICKETING_INFO ti
		JOIN MOVIE USING (MOVIE_NO)
		WHERE
		USER_NO = #{userNo}
		AND TICKET_ID IS NOT NULL
		AND TICKET_FL = 'C'
		ORDER BY TICKET_NO DESC
	</select>

	<!--취소할 영화 시간 조회-->
	<select id="movieTime" parameterType="String"
		resultType="java.time.LocalDateTime">
		SELECT MOVIE_TIME
		FROM TICKETING_INFO
		WHERE TICKET_ID =#{ticketId}
	</select>

	<!--(플래티넘)해당 티켓 보다 후에 예매한 티켓의 등급보다 높은 쿠폰 사용 여부-->
	<select id="countXCoupon" resultMap="ticket_rm">
		SELECT COUNT(*)
		FROM TICKETING_INFO ti
		JOIN USER_COUPON uc ON (ti.COUPON = uc.USER_COUPON_NO)
		WHERE TICKET_NO > #{ticket_no}
		AND ti.USER_NO = #{user_no}
		AND uc.COUPON_NO = 4
	</select>
	<!--매달 1월 아침5시 유저 모든 쿠폰 삭제-->
	<delete id="deleteAllCoupon">
		DELETE
		FROM USER_COUPON
	</delete>

	<!--누적 금액 4만원 미만 고객 등급 브론즈 업데이트-->
	<update id="updateAllBronze">
		UPDATE USER_INFO SET
		USER_RATING = 1
		WHERE USER_AMOUNT &lt; 40000
		AND USER_ROLE = 'C'
	</update>
	<!--누적 금액 4만원 미만 고객 userNo전체 조회 -->
	<select id="selectBronzeUserNo" resultMap="user_rm">
		SELECT USER_NO
		FROM USER_INFO
		WHERE USER_RATING = 1
	</select>
	<!--누적 금액 4만원 이상 10만원 미만 고객 실버 업데이트-->
	<update id="updateAllSilver">
		UPDATE USER_INFO SET
		USER_RATING = 2
		WHERE USER_AMOUNT &gt;= 40000
		AND USER_AMOUNT &lt; 100000
		AND USER_ROLE = 'C'
	</update>
	<!--실버 등급 고객 userNo 전체 조회-->
	<select id="selectSilverUserNo" resultMap="user_rm">
		SELECT USER_NO
		FROM USER_INFO
		WHERE USER_RATING = 2
	</select>
	<!-- 실버등급)브론즈 쿠폰 1개,실버 쿠폰 2개 insert-->
	<insert id="insertSilverCoupon">
		INSERT ALL
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 1, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		SELECT 1 FROM DUAL
	</insert>
	<!--누적 금액 10만원 이상 20만원 미만 고객 골드 업데이트-->
	<update id="updateAllGold">
		UPDATE USER_INFO SET
		USER_RATING = 3
		WHERE USER_AMOUNT &gt;= 100000
		AND USER_AMOUNT &lt; 200000
		AND USER_ROLE = 'C'
	</update>
	<!--골드 등급 고객 userNo 전체 조회-->
	<select id="selectGolduserNo" resultMap="user_rm">
		SELECT USER_NO
		FROM USER_INFO
		WHERE USER_RATING = 3
	</select>
	<!--브론즈 쿠폰 1개,실버 쿠폰 2개,골드 쿠폰 3개 insert-->
	<insert id="insertAllGoldCoupon">
		INSERT ALL
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 1, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		SELECT 1 FROM DUAL
	</insert>
	<!--누적 금액 20만원 이상 고객 플래티넘 업데이트-->
	<update id="updateAllPlatinum">
		UPDATE USER_INFO SET
		USER_RATING = 4
		WHERE USER_AMOUNT &gt;= 200000
		AND USER_ROLE = 'C'
	</update>
	<!--플래티넘 등급 고객 userNo 전체 조회-->
	<select id="platinumNoList" resultMap="user_rm">
		SELECT USER_NO
		FROM USER_INFO
		WHERE USER_RATING = 4
	</select>
	<!--브론즈 쿠폰 1개,실버 쿠폰 2개,골드 쿠폰 3개,플래티넘 쿠폰 2개 insert-->
	<insert id="insertAllPlatinumCoupon">
		INSERT ALL
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 1, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 2, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 3, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 4, DEFAULT)
		INTO USER_COUPON (USER_COUPON_NO,USER_NO,COUPON_NO,USE_FL) VALUES
		(NEXT_UC_NO(),#{userNo}, 4, DEFAULT)
		SELECT 1 FROM DUAL
	</insert>
	<!--모든 유저 누적 금액 초기화-->
	<update id="updateAllAmount">
		UPDATE USER_INFO SET
		USER_AMOUNT = 0
	</update>
	<!--유저 전체 RATING 1 업데이트-->
	<update id="updateRating1">
		UPDATE USER_INFO SET
		USER_RATING = 1
	</update>
</mapper>